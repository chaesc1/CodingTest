#다이나믹 프로그램은 동적 계획법이라고도 부름
#일반적 프로그래밍 분야에서 동적이란
# 자료구조에서 동적할당은 프로그램이 실행되는 도중에 실행에 필요한 메모리를 할당하는 기법
# 반면 다이나믹 프로그래밍에서 다이나믹은 별다른 의미 없이 사용된 언어다.

#최적 부분 구조 -> 큰 문제를 작은문제로 나눌수 있으며 작은 문제의 답을 모아서 큰 문제를 해결
#중복되는 부분 문제 -> 동일한 작은 문제를 반복적으로 해결해야한다.

# def fibo(x):
#     if x == 1 or x == 2:
#         return 1
#     return fibo(x-1)+fibo(x-2)
#
# print(fibo(10))
#단순 재귀 함수로 피보나치 수열을 해결하면 지수 시간 복잡도 but f(2) 는 여러번 호출 되는 것 확인 가능!

#메모이제이션
#-> 한번 계산한 결과를 메모리 공간에 메모하는 기법 top-down방식
#caching 이라고도 함

#피보나치 수열 : 탑 다운 방식 코드

#한 번 계산된 결과를 메모이제이션 하기 위한 리스트 초기화
#d = [0] * 100 #dp테이블

#피보나치 함수를 재귀함수로 구현(탑 다운 다이나믹 프로그래밍)
# def fibo(x):
#     if x == 1 or x == 2:
#         return 1
#     #이미 계산한 적 있는 문제라면 그대로 반환
#     if d[x] != 0:
#         return d[x]
#     #아직 계산하지 않은 문제라면 점화식에 따라서 피보나치 결과 반환
#     d[x] = fibo(x-1) + fibo(x-2)
#     return d[x]
#
# print(fibo(99))

#바텀업(반복문) 방식

#dp테이블 초기화
d = [0] * 100

d[1] = 1
d[2] = 1
n = 99

for i in range(3,n+1):
    d[i] = d[i-1] + d[i-2]

print(d[n])